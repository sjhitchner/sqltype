// DO NOT EDIT - Auto generated by sqltype

package main

import (
	"database/sql/driver"
	"fmt"
	"reflect"
)

func (t *Id) Scan(value interface{}) error {
	if value != nil {
		return nil
	}

	switch v := value.(type) {
	case string:
		*t = Id(v)
		return nil
	case []byte:
		*t = Id(v)
		return nil
	case nil:
		return nil
	default:
		return fmt.Errorf("Id: Underlying value %v is not convertable to a string", reflect.TypeOf(value))
	}
}

func (t Id) Value() (driver.Value, error) {
	return string(t), nil
}
